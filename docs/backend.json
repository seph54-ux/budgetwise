
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the BudgetWise application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "Full name of the user."
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    },
    "Transaction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transaction",
      "type": "object",
      "description": "Represents an income or expense transaction recorded by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the transaction."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Transaction)"
        },
        "category": {
          "type": "string",
          "description": "Category of the transaction."
        },
        "name": {
          "type": "string",
          "description": "Name of the transaction."
        },
        "amount": {
          "type": "number",
          "description": "Amount of the transaction."
        },
        "date": {
          "type": "string",
          "description": "Date of the transaction.",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "enum": ["income", "expense"],
          "description": "Type of transaction."
        }
      },
      "required": [
        "id",
        "userId",
        "category",
        "name",
        "amount",
        "date",
        "type"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a category for classifying expenses.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Category)"
        },
        "name": {
          "type": "string",
          "description": "Name of the category (e.g., Food, Transport)."
        },
        "color": {
          "type": "string",
          "description": "Color associated with the category (e.g., #3F51B5)."
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "color"
      ]
    },
    "Budget": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Budget",
      "type": "object",
      "description": "Represents a budget goal for a specific category.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the budget."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Budget)"
        },
        "category": {
          "type": "string",
          "description": "Category for the budget."
        },
        "amount": {
          "type": "number",
          "description": "Budgeted amount for the category."
        }
      },
      "required": [
        "id",
        "userId",
        "category",
        "amount"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Path-based ownership ensures only the user can access their own profile.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/transactions/{transactionId}",
        "definition": {
          "entityName": "Transaction",
          "schema": {
            "$ref": "#/backend/entities/Transaction"
          },
          "description": "Stores transaction data for each user. Path-based ownership ensures only the user can access their own transactions.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "transactionId",
              "description": "The unique identifier of the transaction."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/categories/{categoryId}",
        "definition": {
          "entityName": "Category",
          "schema": {
            "$ref": "#/backend/entities/Category"
          },
          "description": "Stores expense categories for each user. Path-based ownership ensures only the user can access their own categories.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "categoryId",
              "description": "The unique identifier of the category."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/budgets/{budgetId}",
        "definition": {
          "entityName": "Budget",
          "schema": {
            "$ref": "#/backend/entities/Budget"
          },
          "description": "Stores budget goals for each user. Path-based ownership ensures only the user can access their own budgets.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "budgetId",
              "description": "The unique identifier of the budget."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure security, scalability, and ease of debugging, following the principles of Authorization Independence, Clarity of Intent, DBAC (Database-Based Access Control), and QAPs (Rules are not Filters). Authorization Independence is achieved through denormalization of authorization data. User-owned data is stored in hierarchical paths to simplify security rules. The structure supports the core features of the BudgetWise application, including expense tracking, budget creation, categorized spending, dashboard insights, and spending charts.\n\n*   **Users:** Each user has a dedicated collection for their private data.\n*   **Transactions, Categories, Budgets:** Each of these entities are created as subcollections under a user's document (`/users/{userId}`). This naturally enforces ownership and allows for simple, path-based security rules. The `userId` in each document is redundant with the path, but provides additional clarity.\n\nThis structure ensures that list operations are secure because rules can easily verify that the requesting user is the owner of the data. Furthermore, because all documents in a given collection have the same security needs, Structural Segregation is achieved."
  }
}
